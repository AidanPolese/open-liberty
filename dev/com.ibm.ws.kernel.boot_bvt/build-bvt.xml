<?xml version="1.0" encoding="UTF-8"?>
<project name="com.ibm.ws.kernel.boot_bvt" default="bvt">
        <mkdir dir="bvt/test" />
        <mkdir dir="ta/noservers/servers/noserver" />
        <mkdir dir="bvt/test" />
        <mkdir dir="ta/servers/servers/noserver" />
        <mkdir dir="publish/clients/com.ibm.ws.kernel.boot.fat/apps" />
        <mkdir dir="publish/clients/com.ibm.ws.kernel.boot.template/apps" />
        <mkdir dir="publish/files/test_template_option/templates/servers/templateTest/directoryToFind" />
        <mkdir dir="publish/resources/looseConfig/testUtil/classes/com/ibm/ws/real/test" />
        <mkdir dir="publish/resources/looseConfig/testWeb0/classes/com/ibm/ws/test/servlet" />
        <mkdir dir="publish/resources/looseConfig/testWeb0/WebContent/WEB-INF/lib" />
        <mkdir dir="publish/resources/looseConfig/testWeb1/classes/com/ibm/ws/test/web1/servlet" />
        <mkdir dir="publish/resources/looseConfig/testWeb1/WebContent/WEB-INF/lib" />
        <mkdir dir="publish/resources/looseConfig/utils/classes/com/ibm/ws/test/util/hello" />
        <mkdir dir="test-applications/shutdownfat/resources/META-INF" />
        <mkdir dir="test-applications/shutdownfat/resources/WEB-INF" />

	<property name="profile" value="com.ibm.ws.kernel.boot.bvt" />
	<property name="profile.env" value="com.ibm.ws.kernel.boot.env.bvt" />
	<property name="profile.embedded" value="embed_me" />
  
	<property name="profiles" value="${profile},${profile.env},${profile.embedded}"/>
	<property name="skip.validate.project" value="true" />

	<import file="../ant_build/public_imports/standard_imports.xml" />
	<import file="../ant_build/public_imports/bvt_imports.xml" />

	<!-- Copy to an install directory with special characters -->
	<property name="bvt.prop.install.dir" value="${build.dir}/bvt/wlp (&amp;+)" />
  
	<!-- An extension directory with special characters -->
	<property name="bvt.prop.extension.dir" value="${build.dir}/bvt/wlpExt (&amp;+)" />

    <property name="bvt.src.embedded.dir" value="${basedir}/bvt/src.embedded" />

    <target name="compile_bvt" depends="bvt.compile_bvt" if="bvt_available">
	    <!-- make sure folder exists or bnd will complain -->
		<mkdir dir="${bvt.classes.dir}_embedded" />
	    
	    <!-- src.embedded is the home of classes that are loaded by the nested classlaoder. -->
	    <wlpJavac srcdir="${bvt.src.embedded.dir}" 
	        destdir="${bvt.classes.dir}_embedded"
	        classpathref="project.class.path"
	        debuglevel="${javac.debug.level}"
	        includeAntRuntime="no"
	        debug="true"
	        encoding="${javac.source.file.encoding}"
	        buildWithJavaLevel="${build.with.java.level}"/>
    </target>
  
    <target name="compile_bvt_bundle" depends="bvt.compile_bvt_bundle">
		<!-- Create the second test bundle  -->
        <mkdir dir="${lib.dir}"/>
		<bnd eclipse="false" failok="false" exceptions="true" classpath="${bvt-bundle.classes.dir}" output="${lib.dir}" files="bvt-util.bnd" />
	</target>
  
	<target name="build-bvt" depends="bvt.build-bvt">
		<chmod dir="bvt/test data" includes="**/bin/*" excludes="**/launcher.properties" perm="ugo+x"/>
	</target>

	<target name="bvtsetup" depends="copy-install-dir, bvt.bvtsetup"/>

	<target name="copy-install-dir" description="Copy the install dir to the nested location for the BVT">
		<delete dir="${bvt.prop.install.dir}" includeemptydirs="true" failonerror="false"/>
		<delete dir="${bvt.prop.extension.dir}" includeemptydirs="true" failonerror="false"/>
	  
	    <!-- copy the liberty image, excluding server definitions -->
		<copy todir="${bvt.prop.install.dir}">
			<fileset dir="${liberty.dir}" excludes="usr/servers/**"/>
		</copy>
	    <!-- copy the bvt server definitions -->
		<copy todir="${bvt.prop.install.dir}">
			<fileset dir="${liberty.dir}" includes="usr/servers/testports.properties.*"/>
			<fileset dir="${liberty.dir}" includes="usr/servers/com.ibm.ws.kernel.boot.*/**"/>
			<fileset dir="${liberty.dir}" includes="usr/servers/embed_me/**"/>
		</copy>
	  
		<!-- create a test extension as well -->
		<property name="extension.properties.dir" value="publish/files/test_template_option/extensions" />
		<mkdir dir="${bvt.prop.install.dir}/etc/extensions" />
		<copy todir="${bvt.prop.install.dir}/etc/extensions">
			<fileset dir="${extension.properties.dir}" includes="templateTest*.properties" />
		</copy>
		
		<propertyfile file="${bvt.prop.install.dir}/etc/extensions/templateTestAbsolute.properties">
		  <entry  key="com.ibm.websphere.productInstall" value="${bvt.prop.extension.dir}"/>
		</propertyfile>
		
		<property name="template.dir" value="publish/files/test_template_option/templates/servers" />
	    <mkdir dir="${bvt.prop.extension.dir}/templates/servers" />
		<mkdir dir="${bvt.prop.extension.dir}/lib/features" />
		<copy todir="${bvt.prop.extension.dir}/templates/servers">
			<fileset dir="${template.dir}" includes="templateTest/*" />
		</copy>
		<mkdir dir="${bvt.prop.extension.dir}/templates/servers/templateTest/extensionDir" />
		<!-- copy to install dir as well -->
		<copy todir="${bvt.prop.install.dir}/templates/servers">
			<fileset dir="${template.dir}" includes="templateTest/*" />
		</copy>
	  
	  <!-- Give permissions (if needed) to the jres we use -->
      <chmod dir="bvt/test data"
             perm="ugo+rx"
             includes="**/java" />

	</target>
	
	<target name="prestart-server" depends="clean-notexist-server, fileinstall-bvt-bundle"/>

	<target name="run-test-client" depends="bvt.run-test-client, clean-notexist-server" />
  
    <target name="clean-notexist-server">
        <delete dir="${bvt.prop.server.root}/../notexist" includeemptydirs="true" failonerror="false" />
    </target>

	
	<target name="fileinstall-bvt-bundle">
		<!-- If the project builds a bundle, it is easiest to use fileinstall to 
			install/start the test bundle at runtime. this target makes sure the bundles 
			directory gets cleaned up to ensure correct behavior (i.e. no leftovers from 
			a previous run... ) -->
		<property name="bvt.prop.server.env.root" value="${bvt.prop.install.dir}/usr/servers/${profile.env}" />
		<delete dir="${bvt.prop.server.env.root}/bundles" includeemptydirs="yes"
			failonerror="false" />
		<mkdir dir="${bvt.prop.server.env.root}/bundles" />

		<copy todir="${bvt.prop.server.env.root}/bundles">
			<fileset dir="${lib.dir}" includes="com.ibm.ws.kernel.boot.bvt*.jar" />
		</copy>

		<delete dir="${bvt.prop.server.root}/bundles" includeemptydirs="yes" failonerror="false" />
		<mkdir dir="${bvt.prop.server.root}/bundles" />
		<copy todir="${bvt.prop.server.root}/bundles">
			<fileset dir="${lib.dir}" includes="com.ibm.ws.kernel.boot.util.bvt.jar" />
		</copy>
	</target>
	
	
</project>
