<?xml charset="UTF-8" version="1.0"?>
<!--
    Copyright (c) 2017 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->

<releaseInfo project="com.ibm.ws.session-3.0">
  <originbase release="WASX" fe="SERV1" level="ww1052.04" components="WASCC.web.session"/>

  <notes>
***INFO

In Liberty the session code was split from the WebContainer and componentised so that other components wishing to extend or use would have a common code base.
For Liberty the WebContainer and the HTTPService were both using the common session bundle.
In Liberty the HTTPService no longer uses the common session bundle.  It now has it's own stripped down implementation.
Even though it is just the webcontainer that continues to use the common session bundle I have tried to keep the two separate so that 
it would be available in the future for other components to use.  This was difficult as webcontainer and session updates in WAS keep the two tightly coupled.
Further analysis of the split would be useful and a discussion on whether we should try to push these changes back in to WAS needs to be had.


***NOTES

-com.ibm.ws.webcontainer.session.impl.HttpSessionFacade.java - Changed so that extension HttpSessionFacadeImpl in webcontainer implements IHttpSession
SessionAffinityManager Split

-SessionApplicationParameters hasn't been moved up to version 1.10 as the updates are tightly integrated with the webcontainer.  Therefore the updates have been added to an extension class
SessionApplicationParametersWeb which is in the webconatiner.

-SessionContext Updates to 1.21.1.1 made to impl class HttpSessionContextImpl in webcontainer

-SessionContextRegistry updates to 1.15 made to webcontainer impl SessionContextRegistryImpl

-SessionCookieConfigImpl added to session-3.0 project because the sessionManagerConfig that uses the SessionCookieConfigImpl 
 is a static var that is initialised as part of the service injection of com.ibm.ws.webcontainer.httpsession.SessionManager which is part of the session-3.0 project


***FURTHER INVESTIGATION

-SessionManagerConfig - Version info not updated in tWAS file.  Possibly need to look at this in more detail

-SessionProperties - Version info not updated in tWAS file.  Possibly need to look at this in more detail 

-com.ibm.ws.session.store.memory.MemoryStore needs to be looked at.  Updates to it are tied to webcontainer

-com.ibm.ws.webcontainer.httpsession.SessionManager & SessionMgrComponentImpl need to be looked at. Updates are tied to webcontainer
  </notes>
</releaseInfo>