/**
 * WARNING!  THIS FILE IS AUTOMATICALLY GENERATED!  DO NOT MODIFY IT!
 * Generated on Wed Mar 08 13:02:45 EST 2017
 */

package com.ibm.ws.product.utility.resources;

public class UtilityOptions extends java.util.ListResourceBundle
{
   public Object[][] getContents() {
       return resources;
   }
   private final static Object[][] resources= {
      { "compare.desc", "\tCompare the iFixes applied to the current installation with a new fix\n\tpack level and lists any iFixes not in the fix pack or compares with \n\ta supplied list of iFixes and lists if they are included in the      \n\t current version." },
      { "compare.option-desc.apars", "\tThe compare tool checks the current installation against this comma  \n\tseparated list of APAR IDs to see if it contains them, and then lists\n\tany APARs that are not included." },
      { "compare.option-desc.output", "\tA path to a file to contain the output from this command. This option\n\tis not required. Default is STDOUT." },
      { "compare.option-desc.target", "\tSpecify the target file to compare the current install with. The     \n\ttarget can be either a directory or archive file but must be a valid \n\tWebSphere Application Server Liberty Profile installation location." },
      { "compare.option-desc.verbose", "\tDisplay detailed error messages when an error occurs." },
      { "compare.option-key.apars", "    --apars=\"a comma separated list of APAR IDs\"" },
      { "compare.option-key.output", "    --output=\"path to an output file\"" },
      { "compare.option-key.target", "    --target=\"path to directory or archive file\"" },
      { "compare.option-key.verbose", "    --verbose" },
      { "compare.option.addon", "One of --target or --apars must be supplied." },
      { "compare.usage.options", "\t{0} compare [options]" },
      { "featureInfo.desc", "\tList all the installed features." },
      { "featureInfo.option-desc.output", "\tA path to a file that contain the output from this command. This     \n\toption is not required. Default is STDOUT." },
      { "featureInfo.option-key.output", "    --output=\"path to an output file\"" },
      { "featureInfo.usage.options", "\t{0} featureInfo [options]" },
      { "global.description", "Description:" },
      { "global.options", "Options:" },
      { "global.options.statement", "\tUse help [actionName] for detailed option information of each action." },
      { "global.usage", "Usage:" },
      { "help.desc", "\tPrint help information for the specified action." },
      { "help.usage.options", "\t{0} help [actionName]" },
      { "validate.desc", "\tValidate a production installation against a product checksum file." },
      { "validate.option-desc.checksumfile", "\tSpecify the file that contains the checksum of *.mf and *.blst files \n\tbeing installed. This option is not required. Default is the file    \n\tlib/version/productChecksums.cs" },
      { "validate.option-desc.output", "\tA path to a file that contains the output from this command. This    \n\toption is not required. Default is STDOUT." },
      { "validate.option-key.checksumfile", "    --checksumfile=\"path to the checksum file\"" },
      { "validate.option-key.output", "    --output=\"path to an output file\"" },
      { "validate.usage.options", "\t{0} validate [options]" },
      { "version.desc", "\tPrint product information such as product name and version." },
      { "version.option-desc.ifixes", "\tWhen provided specifies that the list of iFixes installed are also output." },
      { "version.option-desc.output", "\tA path to a file that contains the output from this command. This    \n\toption is not required. Default is STDOUT." },
      { "version.option-desc.verbose", "\tDisplay the whole content of each properties file." },
      { "version.option-key.ifixes", "    --ifixes" },
      { "version.option-key.output", "    --output=\"path to an output file\"" },
      { "version.option-key.verbose", "    --verbose" },
      { "version.usage.options", "\t{0} version [options]" },
      { "viewLicenseAgreement.desc", "\tDisplays the license agreement for the Liberty profile edition that is installed." },
      { "viewLicenseAgreement.usage.options", "\t{0} viewLicenseAgreement" },
      { "viewLicenseInfo.desc", "\tDisplays the license information for the Liberty profile edition that is installed." },
      { "viewLicenseInfo.usage.options", "\t{0} viewLicenseInfo" }
   };
}
