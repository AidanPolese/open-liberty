<?xml version="1.0" encoding="UTF-8"?>
<project name="wlp.lib.extract_test" default="unittest">
    <mkdir dir="samples/dummyInstallerExtendedEmpty/jarcontent" />
    <mkdir dir="samples/dummyLicenseSample/jarcontent/wlp/usr/shared/resources" />
    <mkdir dir="samples/dummySample/jarcontent/wlp/usr/shared/resources" />
    <mkdir dir="samples/dummySampleFileError/jarcontent/wlp/usr/shared/resources" />

    <import file="../ant_build/public_imports/standard_imports.xml" />
    <import file="../ant_build/public_imports/unittest_imports.xml" />

    <target name="buildSampleJar">
        <!-- Could have a more generic name for this target... -->
        <property name="outputJarName" value="${sampleFolder}.jar" />
        <!-- Default -->
        <copy todir="build/${sampleFolder}">
            <fileset dir="samples/${sampleFolder}" excludes="libs/" />
        </copy>
        <iff>
            <and>
                <isset property="externalDependencySourceURL" />
                <isset property="externalDependencyTargetFile" />
            </and>
            <then>
                <replace dir="build/${sampleFolder}/jarcontent" token="@@@DUMMYDEPURL@@@" value="${externalDependencySourceURL}">
                    <include name="externaldependencies.xml" />
                </replace>
                <replace dir="build/${sampleFolder}/jarcontent" token="@@@DUMMYDEPTARGETFILE@@@" value="${externalDependencyTargetFile}">
                    <include name="externaldependencies.xml" />
                </replace>
            </then>
        </iff>

        <available file="../wlp.lib.extract/build/classes" property="extract.src.exists" />
        <iff>
            <istrue value="${extract.src.exists}"/>
            <then>
              <!-- use src project to get classes -->
              <jar destfile="build/${sampleFolder}/output/${outputJarName}" manifest="${manifestFile}">
                  <fileset dir="../wlp.lib.extract/build/classes" />
                  <fileset dir="build/${sampleFolder}/jarcontent" />
              </jar>
            </then>
            <else>
              <!-- use ivy resolved jar for classes -->
              <path id="wlp.lib.extract.path">
                <fileset dir="../prereq.published/lib">
                  <include name="wlp.lib.extract-*.jar"/>
                  <exclude name="*-javadoc.jar" />
                  <exclude name="*-sources.jar" />
                </fileset>
              </path>
              <property name="wlp.lib.extract.jar" refid="wlp.lib.extract.path"/>

              <jar destfile="build/${sampleFolder}/output/${outputJarName}" manifest="${manifestFile}">
                  <zipfileset src="${wlp.lib.extract.jar}" includes="**/*.class"/>
                  <fileset dir="build/${sampleFolder}/jarcontent" />
              </jar>
            </else>
        </iff>
    </target>


    <target name="buildExtraInstallableJars">
        <condition property="fileUrlPrefix" value="file:///" else="file://">
            <os family="windows"/>
        </condition>
        <!-- Dummy Sample Jar -->
        <antcall target="buildSampleJar">
            <param name="sampleFolder" value="dummySample" />
            <param name="externalDependencyTargetFile" value="shared/resources/dummylibs/dummy-dep-1.0.jar" />
            <param name="externalDependencySourceURL" value="${fileUrlPrefix}${basedir}/samples/dummySample/libs/dummy-dep-1.0.jar" />
            <param name="manifestFile" value="samples/dummySample/META-INF/MANIFEST.MF" />
        </antcall>
        <!-- Dummy Sample Jar with missing dependency declared -->
        <antcall target="buildSampleJar">
            <param name="sampleFolder" value="dummySampleFileError" />
            <param name="externalDependencyTargetFile" value="shared/resources/dummylibs/dummy-dep-1.0.jar" />
            <param name="externalDependencySourceURL" value="${fileUrlPrefix}${basedir}/samples/dummySampleFileError/libs/dummy-dep-1.0.jar" />
            <param name="manifestFile" value="samples/dummySampleFileError/META-INF/MANIFEST.MF" />
        </antcall>
        <!-- Dummy Sample Jar w/ License -->
        <antcall target="buildSampleJar">
            <param name="sampleFolder" value="dummyLicenseSample" />
            <param name="externalDependencyTargetFile" value="shared/resources/dummylibs/dummy-dep-1.0.jar" />
            <param name="externalDependencySourceURL" value="${fileUrlPrefix}${basedir}/samples/dummyLicenseSample/libs/dummy-dep-1.0.jar" />
            <param name="manifestFile" value="samples/dummyLicenseSample/META-INF/MANIFEST.MF" />
        </antcall>
        <!-- Dummy Installer Jar (has root of wlp/), that installs just a MARKER to wlp, and has extract installer set to false -->
        <antcall target="buildSampleJar">
            <param name="sampleFolder" value="dummyInstallerNoExtract" />
            <param name="manifestFile" value="samples/dummyInstallerNoExtract/META-INF/MANIFEST-EXTRACT-INSTALLER-DISABLED.MF" />
            <param name="outputJarName" value="dummyInstaller-extractInstallerDisabled.jar" />
        </antcall>
        <!-- Dummy Installer Jar (has root of wlp/), that installs just a MARKER to wlp, and has extract installer set to true -->
        <antcall target="buildSampleJar">
            <param name="sampleFolder" value="dummyInstallerNoExtract" />
            <param name="manifestFile" value="samples/dummyInstallerNoExtract/META-INF/MANIFEST-EXTRACT-INSTALLER-ENABLED.MF" />
            <param name="outputJarName" value="dummyInstaller-extractInstallerEnabled.jar" />
        </antcall>
        <!-- Dummy Addon Installer Jar, that drops no files, and should not extract installer -->
        <antcall target="buildSampleJar">
             <param name="sampleFolder" value="dummyInstallerExtendedEmpty" />
             <param name="manifestFile" value="samples/dummyInstallerExtendedEmpty/META-INF/MANIFEST.MF" />
        </antcall>
    	<!-- Dummy Installer Jar (has root of wlp/), that installs just a MARKER to wlp, has an extension directory, and has extract installer set to true -->
        <antcall target="buildSampleJar">
             <param name="sampleFolder" value="dummyInstallerWithExtension" />
             <param name="manifestFile" value="samples/dummyInstallerWithExtension/META-INF/MANIFEST.MF" />
        </antcall>
    	<!-- Dummy Installer Jar (has root of wlp/), that installs just a MARKER to wlp, has a feature installed, and has extract installer set to true -->
        <antcall target="buildSampleJar">
             <param name="sampleFolder" value="dummyInstallerWithFeature" />
             <param name="manifestFile" value="samples/dummyInstallerWithFeature/META-INF/MANIFEST.MF" />
        </antcall>
    </target>

    <target name="unittestPackage" depends="buildExtraInstallableJars" />
</project>
