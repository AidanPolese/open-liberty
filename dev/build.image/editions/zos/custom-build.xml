<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2017 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->

<project name="zos" default="customize">

  <target name="customize">

    <!-- Copy over the embeddable zOS image -->
    <copy file="${liberty.image.output.upload.dir}/${install.name}-zos-full-${edition.version}.zip"
          tofile="${file.local.dir}/${install.name}-embeddable-zos-${buildLabel}.zip" />

  	<!-- replace the standard config extension jar with a special embedders version of the
         jar that prevents the server from starting if its server.xml is not signed -->
    <mkdir dir="${build.dir}/tmp/zosEmbedderExtract"/>
    <unzip dest="${build.dir}/tmp/zosEmbedderExtract" src="${file.local.dir}/${install.name}-embeddable-zos-${buildLabel}.zip"/>
    <jar jarfile="${build.dir}/tmp/zosEmbedderExtract/wlp/lib/com.ibm.ws.config.ext_1.0.${micro.version}_embedded.jar" filesetmanifest="merge">
      <zipfileset src="${build.dir}/tmp/zosEmbedderExtract/wlp/lib/com.ibm.ws.config.ext_1.0.${micro.version}.jar" excludes="**/ConfigExtension.class" />
    </jar>
    <delete>
      <fileset dir="${build.dir}/tmp/zosEmbedderExtract" includes="wlp/lib/com.ibm.ws.config.ext_1.0.${micro.version}.jar"/>
    </delete>
    <!-- end of replacement code -->
    <zip file="${file.local.dir}/${install.name}-embeddable-signed-config-zos-${buildLabel}.zip">
      <zipfileset dir="${build.dir}/tmp/zosEmbedderExtract"/>
    </zip>
    <delete dir="${build.dir}/tmp/zosEmbedderExtract"/>

    <!-- Re-bundle zos-runtime jar as zos-core zip and remove the JAR -->
    <java jar="${liberty.image.output.upload.dir}/${install.name}-zos-runtime-${edition.version}.jar" fork="true" failonerror="true">
      <arg value="-acceptLicense"/>
      <arg value="${build.dir}/tmp/zosCoreExtract"/>
    </java>
    <zip file="${file.local.dir}/${install.name}-zos-core-${buildLabel}.zip">
      <zipfileset dir="${build.dir}/tmp/zosCoreExtract"/>
    </zip>
    <delete dir="${build.dir}/tmp/zosCoreExtract"/>
    <delete file="${liberty.image.output.upload.dir}/${install.name}-zos-runtime-${edition.version}.jar" />

    <!-- Re-bundle zos-kernel jar as zos-kernel zip and remove the JAR -->
    <java jar="${liberty.image.output.upload.dir}/${install.name}-zos-kernel-${edition.version}.jar" fork="true" failonerror="true">
      <arg value="-acceptLicense"/>
      <arg value="${build.dir}/tmp/zosKernelExtract"/>
    </java>
    <zip file="${file.local.dir}/${install.name}-zos-kernel-${buildLabel}.zip">
      <zipfileset dir="${build.dir}/tmp/zosKernelExtract"/>
    </zip>
    <delete dir="${build.dir}/tmp/zosKernelExtract"/>
    <delete file="${liberty.image.output.upload.dir}/${install.name}-zos-kernel-${edition.version}.jar" />

    <!-- Re-bundle zos-all jar as zos-all zip and remove the JAR -->
    <java jar="${liberty.image.output.upload.dir}/${install.name}-zos-all-${edition.version}.jar" fork="true" failonerror="true">
      <arg value="-acceptLicense"/>
      <arg value="${build.dir}/tmp/zosAllExtract"/>
    </java>
    <zip file="${file.local.dir}/${install.name}-zos-all-${buildLabel}.zip">
      <zipfileset dir="${build.dir}/tmp/zosAllExtract"/>
    </zip>
    <delete dir="${build.dir}/tmp/zosAllExtract"/>
    <delete file="${liberty.image.output.upload.dir}/${install.name}-zos-all-${edition.version}.jar" />

    <!-- The produced wlp-zos-repo-${edition.version}.jar is only used to build
         the embeddable zip, and is therefore removed before publishing. -->
    <delete file="${liberty.image.output.upload.dir}/${install.name}-zos-repo-${edition.version}.jar" />

  </target>
</project>