<?xml version="1.0" encoding="UTF-8"?>
<server description="Liberty beta">

    <!-- Enable features -->
    <featureManager>
        <feature>microProfile-1.0</feature>
        <feature>webProfile-7.0</feature>
        <feature>adminCenter-1.0</feature>
        <feature>restConnector-2.0</feature>
        <feature>transportSecurity-1.0</feature>

        <!-- The following features are new and in beta! -->
        <feature>audit-1.0</feature>
        <feature>bluemixLogCollector-1.1</feature>
        <feature>logstashCollector-1.1</feature>
        <feature>jpaContainer-2.1</feature> <!-- Overidden by jpa-2.1, which is included in webProfile-7.0 -->
        <feature>microProfileConfig-0.1</feature>
        <feature>microProfileFaultTolerance-0.1</feature>

        <!--  The following features are already available and have beta enhancements to them -->
        <feature>batchManagement-1.0</feature>
        <feature>bluemixUtility-1.0</feature>
    </featureManager>

    <!-- This template enables security necessary for Admin Center and some beta features.
         To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore.
         To provide the keystore password, generate an encoded password using
         bin/securityUtility encode and add it below in the password attribute
         of the keyStore element. Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/>
    -->

    <!--Configure a basic user registry using the basicRegistry element.
        Specify your own user name below in the name attribute of the user element.
        For the password, generate an encoded password using bin/securityUtility encode
        and add it in the password attribute of the user element. -->
    <!--
    <basicRegistry id="basic" realm="BasicRealm">
        <user name="yourUserName" password="" />
    </basicRegistry>
     -->

    <!-- To access this server from a remote client add a host attribute to the
         httpEndpoint element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443" />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true" />

    <!-- This is sample configuration for the bluemixLogCollector-1.1 feature -->
    <!--
    <keyStore id="javaKeyStore" location="${java.home}/lib/security/cacerts" password="changeit" />
    <ssl id="mySSLConfig" trustStoreRef="javaKeyStore" keyStoreRef="defaultKeyStore" />

    <bluemixLogCollector
        source="message,trace,garbageCollection,ffdc,accessLog"
        hostName="logs.opvis.bluemix.net"
        port="9091"
        tenant="your_logmet_space_Id"
        password="your_logmet_logging_token"
        sslRef="mySSLConfig"
    />
    -->
    <!-- This is sample configuration for the logstashCollector-1.1 feature -->
    <!--
    <logstashCollector sslRef="testSSLConfig" hostName="localhost" port="46000" >
        <source>accesslog</source>
        <source>message</source>
        <source>logs</source>
        <source>ffdc </source>
        <source>trace</source>
        <source>garbageCollection</source>
    </logstashCollector>
    -->
    
    <!-- This is sample configuration for the jpaContainer-2.1 feature -->
    <!-- The jpaContainer-2.1 feature will be overridden by jpa-2.1 (which is included in webProfile-7.0) -->
    <!-- to observe the behavior of jpaContainer-2.1, the jpa-2.1 and/or webProfile-7.0 must be turned off -->
    <!-- 
    <library id="eclipselink">
        <fileset dir="${server.config.dir}/eclipselink" includes="*.jar"/>
    </library>
    
    <application location="myApp.war">
        <classloader commonLibraryRef="eclipselink"/>
    </application>
    
    <featureManager>
        <feature>bells-1.0</feature>
    </featureManager>
    <bell libraryRef="eclipselink"/>
     -->

</server>
