Index: branches/2.6.x-fixes/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java
===================================================================
diff -u -N -r1417485 -r1421744
--- branches/2.6.x-fixes/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java	(.../WSDLGetUtils.java)	(revision 1417485)
+++ branches/2.6.x-fixes/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/WSDLGetUtils.java	(.../WSDLGetUtils.java)	(revision 1421744)
@@ -21,6 +21,7 @@
 
 import java.io.UnsupportedEncodingException;
 import java.net.MalformedURLException;
+import java.net.URI;
 import java.net.URL;
 import java.net.URLDecoder;
 import java.util.Collection;
@@ -335,9 +336,10 @@
             List<Element> portList = DOMUtils.findAllElementsByTagNameNS(doc.getDocumentElement(),
                                                                          "http://schemas.xmlsoap.org/wsdl/",
                                                                          "port");
+            String basePath = (String) message.get("http.base.path");
             for (Element el : portList) {
-                rewriteAddressProtocolHostPort(base, el, "http://schemas.xmlsoap.org/wsdl/soap/");
-                rewriteAddressProtocolHostPort(base, el, "http://schemas.xmlsoap.org/wsdl/soap12/");
+                rewriteAddressProtocolHostPort(base, el, basePath, "http://schemas.xmlsoap.org/wsdl/soap/");
+                rewriteAddressProtocolHostPort(base, el, basePath, "http://schemas.xmlsoap.org/wsdl/soap12/");
             }
         }
         Object rewriteSoapAddress = message.getContextualProperty(AUTO_REWRITE_ADDRESS);
@@ -378,19 +380,23 @@
         }
     }
 
-    protected void rewriteAddressProtocolHostPort(String base, Element el, String soapNS) {
+    protected void rewriteAddressProtocolHostPort(String base, Element el, String httpBasePathProp, String soapNS) {
         List<Element> sadEls = DOMUtils.findAllElementsByTagNameNS(el,
                                              soapNS,
                                              "address");
         for (Element soapAddress : sadEls) {
+            String location = soapAddress.getAttribute("location").trim();
             try {
-                String location = soapAddress.getAttribute("location").trim();
-                URL locUrl = new URL(location);
-                URL baseUrl = new URL(base);
-                StringBuilder sb = new StringBuilder(baseUrl.getProtocol());
-                sb.append("://").append(baseUrl.getHost()).append(":").append(baseUrl.getPort())
-                    .append(locUrl.getPath());
-                soapAddress.setAttribute("location", sb.toString());
+                URI locUri = new URI(location);
+                if (locUri.isAbsolute()) {
+                    URL baseUrl = new URL(base);
+                    StringBuilder sb = new StringBuilder(baseUrl.getProtocol());
+                    sb.append("://").append(baseUrl.getHost()).append(":").append(baseUrl.getPort())
+                        .append(locUri.getPath());
+                    soapAddress.setAttribute("location", sb.toString());
+                } else if (httpBasePathProp != null) {
+                    soapAddress.setAttribute("location", httpBasePathProp + location);
+                }
             } catch (Exception e) {
                 //ignore
             }

