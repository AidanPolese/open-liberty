-include= ~../cnf/resources/bnd/bundle.props, 
bVersion=1.0

Bundle-Name: WAS ConfigAdmin Service
Bundle-Description: WAS Config Admin Service version ${bVersion}
Bundle-SymbolicName: com.ibm.ws.config; singleton:=true
Bundle-Activator: com.ibm.ws.config.internal.WSConfigActivator

WS-TraceGroup: config

# For each exported package, create (in that package) a package-info.java
# file, and place an @version javadoc tag in package-level javadoc. 
# Append ";provide:=true" if this bundle also provides an implementation
# for the exported API.
Export-Package: com.ibm.websphere.config;provide:=true, \
  com.ibm.websphere.metatype;provide:=true, \
  com.ibm.websphere.config.mbeans;provide:=true, \
  org.osgi.service.cm;provide:=true

Private-Package: com.ibm.ws.config.admin, \
   com.ibm.ws.config*.internal*

Import-Package: org.osgi.service.cm;version="[1.5,1.6)", \
   org.osgi.service.metatype;version="[1.1,2.0)", \
   !*.internal.*, \
   !org.eclipse.equinox.metatype.impl, \
   *

Service-Component=com.ibm.ws.config.schemagen.internal; \
        implementation:=com.ibm.ws.config.schemagen.internal.SchemaGeneratorImpl; \
        provide:='com.ibm.websphere.metatype.SchemaGenerator'; \
        metaTypeService=org.eclipse.equinox.metatype.EquinoxMetaTypeService,\
  com.ibm.websphere.config.metatypeFactoryService; \
  		implementation:=com.ibm.ws.config.xml.internal.metatype.MetaTypeFactoryImpl; \
  		provide:='com.ibm.websphere.metatype.MetaTypeFactory'; \
  		configuration-policy:=ignore;\
  		properties:="service.vendor=IBM"

-dsannotations: com.ibm.ws.config.xml.internal.MetaTypeIntrospection, \
com.ibm.ws.config.xml.internal.ConfigIntrospection, \
com.ibm.ws.config.xml.internal.ServerXMLConfigurationMBeanImpl, \
com.ibm.ws.config.schemagen.internal.ServerSchemaGeneratorImpl, \
com.ibm.ws.config.featuregen.internal.FeatureListMBeanImpl

-includeresource: \
    OSGI-INF/permissions.perm=resources/permissions.perm, \
    OSGI-INF/metatype=resources/OSGI-INF/metatype, \
    OSGI-INF/l10n=resources/OSGI-INF/l10n,\
    @${repo;com.ibm.ws.org.eclipse.equinox.metatype.1.4.200}!/org/eclipse/equinox/metatype/impl/ExtendableHelper.class

instrument.classesExcludes: com/ibm/ws/config/internal/resources/*.class

-buildpath: \
	com.ibm.ws.runtime.update;version=latest,\
	com.ibm.ws.config.ext;version=latest,\
	com.ibm.ws.org.osgi.annotation.versioning.1.0.0;version=latest,\
	com.ibm.websphere.org.osgi.core.6.0.0;version=latest,\
	com.ibm.websphere.org.osgi.service.cm.1.5.0;version=latest,\
	com.ibm.websphere.org.osgi.service.component.1.3.0;version=latest,\
	com.ibm.wsspi.org.osgi.service.component.annotations.1.3.0;version=latest,\
	com.ibm.wsspi.org.osgi.service.event.1.3.1;version=latest,\
	com.ibm.wsspi.org.osgi.service.metatype.1.3.0;version=latest,\
	com.ibm.wsspi.thirdparty.equinox;version=latest,\
	com.ibm.websphere.appserver.spi.kernel.filemonitor;version=latest,\
	com.ibm.ws.threading;version=latest,\
	com.ibm.ws.org.eclipse.equinox.metatype.1.4.200;version=latest,\
	com.ibm.ws.kernel.service;version=latest,\
	com.ibm.websphere.appserver.spi.logging;version=latest

-testpath: \
	../build.sharedResources/lib/junit/old/junit.jar;version=file, \
	../build.sharedResources/lib/ws-junit/ws-junit.jar;version=file, \
	../build.sharedResources/lib/hamcrest-all.jar;version=file, \
	../build.sharedResources/lib/jmock/old/jmock-junit4.jar;version=file, \
	../build.sharedResources/lib/jmock/old/jmock.jar;version=file, \
	../build.sharedResources/lib/jmock/legacy/jmock-legacy.jar;version=file, \
	../build.sharedResources/lib/jmock/legacy/objenesis.jar;version=file, \
	../build.sharedResources/lib/jmock/legacy/cglib-nodep.jar;version=file, \
	com.ibm.ws.kernel.service.location;version=latest, \
	com.ibm.ws.logging;version=latest, \
	com.ibm.ws.kernel.boot.logging;version=latest, \
	com.ibm.ws.kernel.security.thread;version=latest
