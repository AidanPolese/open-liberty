<?xml version="1.0" encoding="UTF-8"?>
<project name="com.ibm.ws.kernel.feature_fat" default="buildandrun" basedir=".">
    <import file="../ant_build/public_imports/fat_imports.xml" />

<!-- Set fattest.timeout to some absurd value (currently 4 hours.) SOE buckets can time out. -->
    <property name="fattest.timeout" value="14400000"/>

    <!-- Run against full image - ensure that javaeeClient feature is available -->
    <property name="fat.image.type" value="use-full-image"/>    
    
    <target name="addRequiredFiles">
        <copy todir="${required.lib.dir}">            
            <fileset dir="${basedir}/../build.image/wlp/lib/" includes="org.eclipse.osgi_*.jar"/>
        </copy>
    	
    	<iff>
	      <available file="../com.ibm.ws.org.apache.commons.compress/lib/" />
	      <then>
			<copy todir="${required.lib.dir}">
				<fileset dir="../com.ibm.ws.org.apache.commons.compress/lib/" includes="*" />
			</copy>
		  </then>
		  <else>
			<copy todir="${required.lib.dir}">
				<fileset dir="${basedir}/../prereq.published/lib/" includes="com.ibm.ws.org.apache.commons.compress.1.10-*.jar" />
			</copy>
		  </else>
		</iff>
        
        <!-- If we are doing a building the image then we will create some ESAs, copy these in now -->
      <iff>
            <or>
              <equals arg1="${create.im.repo}" arg2="true"/>
              <equals arg1="${build.license.zip}" arg2="true"/>
            </or>
            <then>
                <mkdir dir="${basedir}/publish/features/dhe_repo"/>
                <unzip dest="${basedir}/publish/features/dhe_repo" src="${liberty.image.dir}/output/upload/externals/installables/repo.${liberty.service.version}.zip">
                    <patternset>
                        <include name="**/*.esa"/>
                        <exclude name="**/com.ibm.websphere.appserver.safAuthorization-1.0.esa **/com.ibm.websphere.appserver.safRegistry-1.0.esa **/com.ibm.websphere.appserver.syncToOSThread-1.0.esa **/com.ibm.websphere.appserver.syncToOSThreadContext-1.0.esa **/com.ibm.websphere.appserver.zosConnect-1.0.esa **/com.ibm.websphere.appserver.zosConnectLocalAdapters-1.0.esa **/com.ibm.websphere.appserver.zosLocalAdapters-1.0.esa **/com.ibm.websphere.appserver.zosSecurity-1.0.esa **/com.ibm.websphere.appserver.zosTransaction-1.0.esa **/com.ibm.websphere.appserver.zosWlm-1.0.esa **/com.ibm.websphere.appserver.zosWlmContext-1.0.esa"/>
                    </patternset>
                    <mapper type="flatten"/>
                </unzip>
                
                <copy file="${liberty.image.dir}/output/upload/externals/installables/wlp-developers-extended-${liberty.service.version}.jar" todir="${basedir}/publish/images" />    
            </then>
        </iff>
    </target>
    
    <target name="addAutoInstallApplications" description="Automatically Install applications on LibertyServer instance creation">
        <copy file="${basedir}/publish/files/test.feature.api.client.zip" tofile="${basedir}/publish/servers/com.ibm.ws.kernel.feature.api/dropins/test.feature.api.client.war" />
        <property name="ignoreAPIEJB.dir" location="${basedir}/publish/servers/com.ibm.ws.kernel.feature.ignoreAPI/dropins/IgnoreAPI.ear/IgnoreAPIEJB.jar"/>
        <wlpJavac srcdir="${ignoreAPIEJB.dir}" destdir="${ignoreAPIEJB.dir}" buildWithJavaLevel="${build.with.java.level}" />

        <!-- Build service consumer esa -->
        <zip destfile="${basedir}/publish/files/test.service.consumer.esa" update="true">
            <zipfileset dir="${basedir}/build/fat-bundles" includes="test.service.consumer_1.0.0.jar" />
            <zipfileset dir="${basedir}/publish/files/ESAFiles/test.service.consumer.esa" includes="OSGI-INF/SUBSYSTEM.MF"/>
        </zip>
        <copy file="${basedir}/publish/files/test.service.consumer.esa" tofile="${basedir}/publish/servers/com.ibm.ws.kernel.feature.api.service/dropins/test.service.consumer.esa" />
    </target>
</project>
