/*
 * IBM Confidential
 *
 * OCO Source Materials
 *
 * Copyright IBM Corp. 2010
 *
 * The source code for this program is not published or other-
 * wise divested of its trade secrets, irrespective of what has
 * been deposited with the U.S. Copyright Office.
 */

package com.ibm.ws.monitor.internal.command;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.osgi.framework.console.CommandInterpreter;
import org.eclipse.osgi.framework.console.CommandProvider;

public class EclipseMonitorCommandProvider extends MonitorCommandProvider implements CommandProvider {

    public String getHelp() {
        StringBuilder sb = new StringBuilder();
        sb.append(getDescription());
        sb.append(getSyntaxInformation());
        return sb.toString();
    }

    private final static class EquinoxMessageStream implements MonitorCommandProvider.MessageStream {
        CommandInterpreter ci;

        EquinoxMessageStream(CommandInterpreter ci) {
            this.ci = ci;
        }
        
        public void print(Object o) {
            ci.print(o);
        }
        
        public void println(Object o) {
            ci.println(o);
        }
    }

    public void _monitor(CommandInterpreter commandInterpreter) {
        List<String> args = new ArrayList<String>();
        args.add("monitor");
        while (true) {
            String arg = commandInterpreter.nextArgument();
            args.add(arg);
            if (arg == null) {
                break;
            }
        }
        executeCommand(args, new EquinoxMessageStream(commandInterpreter), new EquinoxMessageStream(commandInterpreter));
    }
}
