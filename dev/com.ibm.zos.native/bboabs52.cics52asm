*ASM CICS(NOPROLOG NOEPILOG SYSEIB)
*/*START OF SPECIFICATIONS ********************************************
*
* DESCRIPTIVE-NAME: WAS z/OS Adapters CICS Switch to base space
*
* CSECT NAME: BBOABS52
*
* COMPONENT:  boss_adaptor
*
* EYE-CATCHER: none
*
* PROPRIETARY STATEMENT=
* IBM Confidential
* OCO Source Materials
* 5655-I35 (C) Copyright IBM Corp. 2014
* The source code for this program is not published or otherwise
* divested of its trade secrets, irrespective of what has been
* deposited with the U.S. Copyright Office.
* Status = H28W700
*
*
* FUNCTION:  Switch to base space mode
*
* METHOD-OF-ACCESS:
*
* SIZE:
*
* SERIALIZATION: None
*
* DEPENDENCIES: None
*
* EXTERNAL CLASSIFICATION: NONE
* END OF EXTERNAL CLASSIFICATION:
*
* CHANGE-ACTIVITY:
*
*   Flag Reason      Release  YYYYMMDD Origin  Description
*   $PI24444         H28W800  20140820  PDFG   Support CICS TS5.2
*
*END OF SPECIFICATIONS ***********************************************/
*
         TITLE 'BBOABS52 - WAS Adapters CICS Switch base space'
         DFHREGS ,
BBOABS52 AMODE 31
BBOABS52 RMODE ANY
         DFHUEXIT TYPE=XPIENV
BBOABS52 CSECT
*----------------------------------------------------------------------
* On entry, R3  -> CICS Kernel Stack
*           R13 -> 72 byte register save area (RSA) plus NAB
*           R14 -> Return-to address
*           R15 -> Entry point
*----------------------------------------------------------------------
         J     Around
         DC    CL8'BBOABS52'            Module name
         DC    CL8' *OLA3* '            Stub marker - OLA3
         DC    CL10'&SYSDATE '          Asm date
         DC    CL6'&SYSTIME'            Asm time
Around   DS    0H
         STM   R14,R12,12(R13)  SAVE REGISTERS
         LR    R12,R15          SET BASE REGISTER
         USING BBOABS52,R12
         L     R9,76(R13)       Load dynamic area from NAB into R9
         USING DFHSMSR_ARG,R9   Address parm list
         LR    R4,R13           Save RSA address
         LR    R13,R3           Get the kernel stack into R13 (for XPI)
         DFHSMSRX CALL,                                                *
               CLEAR,                                                  *
               IN,                                                     *
               FUNCTION(SWITCH_SUBSPACE),                              *
               SPACE(BASESPACE),                                       *
               OUT,                                                    *
               RESPONSE(*),                                            *
               REASON(*)
         LLGH  R15,SMSR_RESPONSE Store RC in R15              @659861C
         LR    R13,R4            Restore RSA address in R13
         DROP  R9
DONE     DS    0H
         L     R14,12(R13)      Restore caller's R14
         LM    R0,R12,20(R13)   RESTORE CALLERS R0-R12
         BSM   0,R14            RETURN TO CALLER
*
         LTORG
*
*         DFHUEXIT TYPE=RM
*
* DFHSMSRY Mapping (for switch to base space)
         COPY DFHSMSRY
*
*
         END  BBOABS52
