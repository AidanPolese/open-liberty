#!/usr/bin/perl
#
# IBM Confidential
#
# OCO Source Materials
#
# Copyright IBM Corp. 2011
#
# The source code for this program is not published or otherwise divested
# of its trade secrets, irrespective of what has been deposited with the
# U.S. Copyright Office.
#

#----------------------------------------------------------------------------
# Drive the LE DSECT mapping tool and post process the generated header
# to add typedefs and change the comments to be doxygen compatible.
#----------------------------------------------------------------------------

use File::Basename;

$bindir = dirname($0);

# Iterate over all of the files on the command line
foreach $arg (@ARGV) {

    # Assume we'll be creating typedefs for the generated structs
    $no_typedef = 0;

    # Read the initial source content so we can look for the @NO_TYPEDEF magic
    open ASM_SOURCE, "<$arg" || die "Unable to open $arg";
    @asm_contents = <ASM_SOURCE>;
    close ASM_SOURCE;

    # Read the initial source content so we can look for the @NO_TYPEDEF magic
    $no_typedef = grep /\@NO_TYPEDEF/, @asm_contents;

    # Execute EDCDSECT and read the output (The STEPLIB assignment below is filtered out on non-Poughkeepsie machines in build-antz-zos-liberty.xml)
    open EDCDSECT, "STEPLIB=BOSS.ZWAS800.Z12.CCNV18.SCCNCMP $bindir/edcdsect.rexx $ARGV[0] 2>/dev/null |" || die "Unable to execute edcdsect.rexx";

    # Process the EDCDSECT output
    while (<EDCDSECT>) {

        # Generate a typedef unless we're told not to
        if ($no_typedef == 0) {
            if (/^\s*struct\s+.*_\s/) {
                s@^((\s*)struct\s+((.*)_)\s*\{)@\2typedef struct \3 \4\; /* Generated by make */\n\1@g;
            } else {
                s@^((\s*)struct\s+(.*)\b\s*\{)@\2typedef struct \3 \3\; /* Generated by make */\n\1@g;
            }
        }

        # Replace /* at beginning of line with /**
        if (!/values for field/i) {
            s@^/\*(\s)(.*)\*/@/\*\* \1\2\*/@g;
        }

        # Replace /* at end of line with /**<
        s@(\S+)(\s*)/\*\s(.*)\*/@\1\2/\*\*\< \3\*/@g;

        # Massage /**< - text into /**< text
        s@(/\*\*\<\s)(\-\s)@\1@g;
        
        # Eat the change flags
        s%(/\*\*.*)\@\S{1,7}%\1     %g;
        
        print;
    }

    close EDCDSECT;
}
