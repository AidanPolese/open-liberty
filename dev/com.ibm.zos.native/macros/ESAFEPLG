*
* IBM Confidential
*
* OCO Source Materials
*
* Copyright IBM Corp. 2016
*
* The source code for this program is not published or otherwise
* divested of its trade secrets, irrespective of what has been
* deposited with the U.S. Copyright Office.
*
         MACRO
&NAME    ESAFEPLG
         GBLC  &CCN_LITN
         GBLC  &CCN_CSECT
         GBLB  &ESAFEPLG_DSECT
*
* This epilog gets control in 64 bit mode. It must return control 
* in 31 bit mode, since that's the mode the prolog got control in. 
* So this un-does everything done by the prolog.
*
         LG   2,128(13)        Load previous register save area
         AGHI 13,-8            Walk back to parm area address
         LG   3,0(13)          Load parm area address
         AGHI 3,-64            Walk back to reg high half save area

*
* Switch to 31 bit mode
*
         SAM31                 
         SYSSTATE PUSH
         SYSSTATE AMODE64=NO   

*
* Restore the register high halves, then release the temporary storage
*         
         LMH  14,12,0(3)       Restore high halves of regs
         LARL 15,&CCN_LITN     Address constants
         USING &CCN_LITN,15         
         STORAGE RELEASE,LENGTH=ESAFEPLG_TEMP_STORAGE_LEN,ADDR=(3),    X
               SP=ESAFEPLG_TEMP_STORAGE_SUBPOOL,CALLRKY=YES
         DROP 15

*
* Restore the registers and return
*
         LR   13,2             Restore register save area
         LM   14,12,12(13)     Restore registers
         LHI  15,0             Always RC=0
         BR   14               Return to caller
         SYSSTATE POP
*
* Define the DSECTs we're going to use if this is the first time the
* macro is being invoked.
*
         AIF (&ESAFEPLG_DSECT).NODSECT
&ESAFEPLG_DSECT SETB 1
ESAFEPLG_TEMP_STORAGE_LEN EQU 32768   Length of temporary storage
ESAFEPLG_TEMP_STORAGE_SUBPOOL EQU 131  Subpool of temporary storage
&CCN_CSECT CSECT
.NODSECT ANOP
         MEND