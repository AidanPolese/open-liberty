*
* IBM Confidential
*
* OCO Source Materials
*
* Copyright IBM Corp. 2011
*
* The source code for this program is not published or otherwise
* divested of its trade secrets, irrespective of what has been
* deposited with the U.S. Copyright Office.
*
         MACRO
&NAME    RETREPIL
         GBLC &CCN_CSECT
         GBLC &CCN_LITN
         GBLB &BBGZ_RETREPIL_DSECT
*
* This PROLOG/EPILOG is for ESTAEX recovery functions that are in an
* AMODE64 object deck.  
*
         LGR   2,15             Save return code in R2
         LGR   3,13             Put dynamic area in R3
         AGHI  3,-16            Subtract our fake parameter list
         NILH  3,X'FFFE'        Subtract 64K prefix
         LG    13,128(,13)      Restore register save area
*
* Get some temp storage to put our parm list to IARV64
*
         LARL  15,&CCN_LITN  Address literals area off R15
         USING &CCN_LITN,15
         STORAGE OBTAIN,LENGTH=RETREPIL_TEMP_STORAGE_LEN,              X
               SP=RETREPIL_TEMP_STORAGE_SUBPOOL,CALLRKY=YES
         DROP  15
         LGR   4,1 Move temporary storage to R4
         USING RETREPIL_TEMP_STG,4
*
* Work around an RSM bug by getting our TTOKEN and passing it to IARV64
* (APAR number OA37025).
*
         USING PSA,0
         LLGT  15,PSATOLD
         DROP  0
         USING TCB,15
         LLGT  15,TCBSTCB  Load STCB from PSA
         DROP  15
         USING STCB,15
         MVC   RETREPIL_TEMP_STG_IARV64_TTOKEN,STCBTTKN
         DROP  15
*
* Free the dynamic area
*
         STG   3,RETREPIL_TEMP_STG_IARV64_ORIGIN Store address to free
         IARV64 REQUEST=DETACH,MATCH=SINGLE,                           X
               MEMOBJSTART=RETREPIL_TEMP_STG_IARV64_ORIGIN,            X
               TTOKEN=RETREPIL_TEMP_STG_IARV64_TTOKEN,                 X
               USERTKN=NO_USERTKN,COND=NO,PLISTVER=0,                  X
               MF=(E,RETREPIL_TEMP_STG_IARV64_PLIST,COMPLETE)
*
* Free the temporary storage
*
         LARL  15,&CCN_LITN  Address literals area off R15
         USING &CCN_LITN,15
         STORAGE RELEASE,LENGTH=RETREPIL_TEMP_STORAGE_LEN,ADDR=(4),    X
               SP=RETREPIL_TEMP_STORAGE_SUBPOOL,CALLRKY=YES
         DROP  4
         DROP  15         
*
* Restore the registers and return
*
         LG    14,8(13)         Restore reg 14
         LGR   15,2             Restore reg 15 (return code)
         LMG   1,12,32(13)      Restore regs 1 thru 12
         BR    14               Return to caller
*
* Define the DSECTs we're going to use if this is the first time the
* macro is being invoked.
*
         AIF (&BBGZ_RETREPIL_DSECT).NODSECT
&BBGZ_RETREPIL_DSECT SETB 1
RETREPIL_TEMP_STG       DSECT    Mapping of temporary storage
RETREPIL_TEMP_STG_IARV64_ORIGIN DS FD IARV64 returned storage addr
RETREPIL_TEMP_STG_IARV64_TTOKEN DS CL16 TTOKEN
RETREPIL_TEMP_STG_IARV64_PLIST  DS CL88 Parameter list v0
RETREPIL_TEMP_STG_AVAILABLE     DS CL144 Available for use
*
RETREPIL_TEMP_STORAGE_LEN EQU 256     Length of temporary storage
RETREPIL_TEMP_STORAGE_SUBPOOL EQU 131 Subpool of temporary storage
*
&CCN_CSECT CSECT
.NODSECT ANOP
         MEND