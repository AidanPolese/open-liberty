*
* IBM Confidential
*
* OCO Source Materials
*
* Copyright IBM Corp. 2016
*
* The source code for this program is not published or otherwise
* divested of its trade secrets, irrespective of what has been
* deposited with the U.S. Copyright Office.
*
         MACRO
&NAME    SAIOEPL
         GBLC  &CCN_LITN
         GBLC  &CCN_CSECT
         GBLB  &BBGZ_SAIOEPL_DSECT
*
* This epilog gets control for the AIO exit routines in 64 bit mode,
* driven on an SRB. So this un-does everything done by the prolog.
* Switch to key 0. 
*
* --------------------------------------------------------------------
* Back up the dynamic area 16 bytes to see where the entry linkage
* got the dynamic area from. 8 bytes is the workarea
* next 8 bytes contains the cell pool anchor
* --------------------------------------------------------------------
         LG    3,128(13)     Restore the saved DSA from R13 backchain
         AGHI  13,-24        Subtract back to the dynamic area details
         LG    4,0(,13)      Load the SAIOEPL_DYNAREA@
         LG    1,8(,13)      Move cell pool anchor to R1 for free
         LG    5,16(,13)     Get the IARV64 addr if obtained
         USING SAIOEPL_DYNAREA,4
* go back 64 K and that becomes the cell addr ??
         NILH  13,X'FFFE'   Subtract 64K prefix from dynamic area         
         LGR   0,13 Use R0 to calculate the cell addr to free
* --------------------------------------------------------------------
* Free the cell to a cell pool.  Cell address is already in R0.
* --------------------------------------------------------------------
         LTGR  1,1           If we got a CELL?
         BRE   FREEIARV64&SYSNDX  No, Go free IARV64 obtained area         
         CALL  CSRC4RFR      Free CELL from AIOCD SRB Cellpool.
         BRU   SETUPRTN&SYSNDX  Branch to exit        
* --------------------------------------------------------------------
* Free the cell to a cell pool.  Cell address is already in R0.
* --------------------------------------------------------------------
FREEIARV64&SYSNDX DS 0H
         MODESET EXTKEY=ZERO Switch from Key 2 to Key 0
         STG   5,SAIOEPL_IARV64_ORG Pass IARV64 addr to free
         IARV64 REQUEST=DETACH,MEMOBJSTART=SAIOEPL_IARV64_ORG,         X
               MATCH=SINGLE,COND=NO,PLISTVER=0,USERTKN=NO_USERTKN,     X
               OWNER=NO,MF=(E,SAIOEPL_IARV64_PLIST,COMPLETE)     
         BRU   SETUPRTN2&SYSNDX  Branch to exit, Skip MODESET          
* Switch back to Key 0 and return.         
SETUPRTN&SYSNDX DS 0H          
         DROP  4
         MODESET EXTKEY=ZERO  Switch from Key 2 to Key 0
SETUPRTN2&SYSNDX DS 0H          
         LGR   13,3
         LMG   14,12,8(3)     Restore registers 14-12
         BR    14             Return to the caller
*
* Define the DSECTs we're going to use if this is the first time the
* macro is being invoked.
         AIF (&BBGZ_SAIOEPL_DSECT).NODSECT
&BBGZ_SAIOEPL_DSECT SETB 1
SAIOEPL_PARMS           DSECT     Mapping of R1 Parameter list
SAIOEPL_AIOCB@          DS AD     0x000 Address of AIOCB
SAIOEPL_DYNAREA@        DS AD     0x008 Address of 2K workarea
SAIOEPL_WORKLEN@        DS AD     0x010 Address of work area length
*                                 0x018 Size of Parms
*
SAIOEPL_DYNAREA            DSECT    Mapping of the parms to IARV64
SAIOEPL_IARV64_ORG   DS FD    Returned storage start address
SAIOEPL_IARV64_PLIST DS CL88  Param list for execute form v0
*
*
&CCN_CSECT CSECT
.NODSECT ANOP
         MEND
