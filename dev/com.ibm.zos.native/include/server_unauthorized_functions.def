/*
 * IBM Confidential
 *
 * OCO Source Materials
 *
 * Copyright IBM Corp. 2011, 2016
 *
 * The source code for this program is not published or otherwise divested
 * of its trade secrets, irrespective of what has been deposited with the
 * U.S. Copyright Office.
 */
/*-------------------------------------------------------------------*/
/* This is a sample function definition file for the server          */
/* unauthorized function module (BBGZSUFM).  Adding functions to     */
/* the list will cause entries to be put into the BBGZSUFM as well   */
/* as generate stubs to these functions which can be used in the     */
/* client.  There should be one definition file per component area   */
/* in Lexington.                                                     */
/*                                                                   */
/* UNAUTH_DEF(ret_type, func_name, (args w/type), (args w/o type))   */
/*                                                                   */
/* where:                                                            */
/*   ret_type = The return type for your function.                   */
/*   func_name = The name of your function.                          */
/*   args w/type = The arguments that your function takes, as they   */
/*                 would be specified in the function prototype,     */
/*                 including the enclosing parenthesis.  For example */
/*                 the function int add(int* p1, int* p2) would have */
/*                 args as (int* p1, int* p2).                       */
/*   args w/o type = The arguments that your function takes without  */
/*                   the types.  This is the same as the previous    */
/*                   except without the types.  So for               */
/*                   int add(int* p1, int* p2) it would be (p1,p2).  */
/*                                                                   */
/* Exapmle:                                                          */
/*   UNAUTH_DEF(int, test_add_func, (int* i1, int* i2), (i1,i2))     */
/*   This defines a function named test_add_func, which takes two    */
/*   arguments and returns an int.  Somewhere in the BBGZSUFM load   */
/*   module this function must exist.  A stub, using OS linkage,     */
/*   will be created and placed in the BBGZSUFM function table for   */
/*   an LE client to call.                                           */
/*                                                                   */
/* The client (server) can call the routine by including the file    */
/* "include/server_function_module_stub.h" and calling the function  */
/* name directly, like so:                                           */
/*   #include "include/server_function_module_stub.h"                */
/*   void main() {                                                   */
/*     struct server_function_stubs* stubs_p =                       */
/*             getServerFunctionModuleStubs();                       */
/*     int i1 = 2, i2 = 4;                                           */
/*     int sum = stubs_p->unauthorized.test_add_func(&i1,&i2);       */
/*   }                                                               */
/*                                                                   */
/* Note: If you add a new definition file for a new functional area  */
/* (component), you must include it in the following places:         */
/*   server_function_module_stub.mc                                  */
/*   include/server_function_module_stub.h                           */
/*-------------------------------------------------------------------*/
#ifdef  UNAUTH_DEF_INCLUDES
// Includes that define structs, etc, used by UNAUTH_DEF below
// ex. #include "include/server_sample_functions.h"
#include "mvs_ifausage.h"
#include "mvs_wto.h"
#include "server_command_functions.h"
#include "server_ipt_stubs.h"
#include "server_process_data.h"
#include "server_utils.h"
#include "server_wola_unauth_services.h"
#else
#ifndef UNAUTH_DEF
#define UNAUTH_DEF(svc_name, auth_name, impl_name, args, num_args)
#define _CLEAR_UNAUTH_DEF
#endif
UNAUTH_DEF(int, angel_register_pc_client_stub, (char* c_p, AngelAnchor_t* aa_p), (c_p, aa_p))
UNAUTH_DEF(int, angel_deregister_pc_client_stub, (AngelAnchor_t* aa_p), (aa_p))
UNAUTH_DEF(AngelAnchor_t*, findAngelAnchor, (char* angelName), (angelName))
UNAUTH_DEF(int, getAngelVersion, (AngelAnchor_t* aa_p), (aa_p))

// Console Command Support
UNAUTH_DEF(int, getConsoleCommand, (GetConsoleCommandParms* parms), (parms))
UNAUTH_DEF(int, stopCommandListening, (StopCommandListeningParms* parms), (parms))
UNAUTH_DEF(int, getIEZCOM_reference, (GetIEZCOM_referenceParms* parms), (parms))

// UTILS
// defect 61857 commented out driveAuthorizedServiceOnIPTExitRoutine to avoid a
// 0c1 abend on stop when the WLM feature is enabled.
// If we ever get a fix for BPX4IPT giving us a 144 byte save area then we need to delete 2 lines
// in server_unauthorized_functions.mc, 2 lines in server_unauthorized_functions.h and
// uncomment the following line.
//UNAUTH_DEF(int, driveAuthorizedServiceOnIPTExitRoutine, (DriveAuthorizedServiceOnIPTParms_t* parms_p), (parms_p))
UNAUTH_DEF(int, registerProduct, (regParms* parms), (parms))
UNAUTH_DEF(int, write_to_operator_response, (const char* msg, const long* cart, const int* consid, int* rc), (msg, cart, consid, rc))
UNAUTH_DEF(int, write_to_operator_unauthorized_routine, (char* msg, const WtoLocation* location), (msg, location))
UNAUTH_DEF(int, getServerProcessDataUnauth, (const server_process_data** outPGOO_PtrPtr), (outPGOO_PtrPtr))

UNAUTH_DEF(int, getTimeusedData, (TimeusedData* outDataPtr), (outDataPtr))

// WOLA
UNAUTH_DEF(int, openOTMAConnection, (OpenOTMAParms* parms), (parms))
UNAUTH_DEF(int, otmaAllocate, (otma_alloc_parms* parms), (parms))
UNAUTH_DEF(int, otmaSendReceive, (otma_sendrcv_parms* parms), (parms))
UNAUTH_DEF(int, otmaFree, (otma_free_parms* parms, void* ecb_p, int* postCode), (parms, ecb_p, postCode))
UNAUTH_DEF(int, closeOtmaConnection, (otma_close_parms* parms), (parms))


#ifdef _CLEAR_UNAUTH_DEF
#undef UNAUTH_DEF
#undef _CLEAR_UNAUTH_DEF
#endif
#endif

/* vim: set filetype=c : */
