<FindBugsFilter>
  <!-- Begin Global Findbugs Excludes do not edit by hand - edit globally-->
  <Match>
    <Bug pattern="BC_IMPOSSIBLE_INSTANCEOF,BC_VACUOUS_INSTANCEOF,BSHIFT_WRONG_ADD_PRIORITY,CO_COMPARETO_INCORRECT_FLOATING,DE_MIGHT_IGNORE,DLS_DEAD_LOCAL_STORE,DM_BOXED_PRIMITIVE_FOR_PARSING,DM_BOXED_PRIMITIVE_TOSTRING,DM_NUMBER_CTOR,DMI_HARDCODED_ABSOLUTE_FILENAME,EQ_DOESNT_OVERRIDE_EQUALS,INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE,IT_NO_SUCH_ELEMENT,ME_ENUM_FIELD_SETTER,ME_MUTABLE_ENUM_FIELD,MS_CANNOT_BE_FINAL,MS_MUTABLE_ARRAY,MS_MUTABLE_COLLECTION,MS_MUTABLE_COLLECTION_PKGPROTECT,MS_PKGPROTECT,NP_LOAD_OF_KNOWN_NULL_VALUE,NP_NULL_ON_SOME_PATH,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,NP_NULL_PARAM_DEREF,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,RANGE_ARRAY_INDEX,RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,RpC_REPEATED_CONDITIONAL_TEST,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,SA_FIELD_SELF_ASSIGNMENT,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE,UC_USELESS_CONDITION,UC_USELESS_CONDITION_TYPE,UC_USELESS_OBJECT,UC_USELESS_VOID_METHOD,WMI_WRONG_MAP_ITERATOR"/>
  </Match>
  <!-- End Global Findbugs Excludes do not edit by hand - edit globally-->
   <!-- See http://findbugs.sourceforge.net/manual/filter.html for details of the syntax of this file -->

    <!-- match generated nls classes: return mutable type -->
   <Match> 
      <Bug pattern="EI_EXPOSE_REP" />
      <Class name="~.*\.resources\..*" />
      <Method name="getContents"/>
   </Match>

   <Match> 
      <Bug pattern="EI_EXPOSE_REP" />
      <Class name="~com\.ibm\.ws\.concurrent\.internal\..*Trigger" />
      <Method name="getNextRunTime"/>
   </Match>

   <!-- Tr.warning called via a wrapping function -->
   <Match>
     <Bug pattern="TR_COMPUTED_KEY"/>
     <Class name="com.ibm.ws.concurrent.internal.ContextServiceImpl"/>
     <Method name="ignoreWarnOrFail"/>
   </Match>

   <Match>
      <Bug pattern="DLS_DEAD_LOCAL_STORE" />
      <Class name="com.ibm.ws.concurrent.internal.ScheduledTask" />
      <Method name="call"/>
   </Match>

   <Match> 
      <Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS" />
      <Class name="com.ibm.ws.concurrent.internal.ScheduledTask$FutureImpl" />
      <Method name="compareTo"/>
   </Match>

   <Match>
      <Bug pattern="NP_NULL_PARAM_DEREF" />
      <Class name="com.ibm.ws.concurrent.internal.ScheduledTask" />
      <Method name="run"/>
   </Match>

   <Match>
      <Bug pattern="NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS" />
      <Class name="com.ibm.ws.concurrent.internal.ScheduledTask" />
   </Match>

   <Match> 
      <Bug pattern="SYSTEM_CURRENT_TIME_MILLIS_CALLED" />
      <Class name="~com\.ibm\.ws\.concurrent\.internal\.ScheduledTask(\$.*)?" />
   </Match>

  <!-- Constructing the new thread is the purpose of the method - we assume the caller has privilege (well once Liberty supports Java 2 Security -->
  <Match>
    <Bug pattern="DJV_CONSTRUCT_INSIDE_DO_PRIVILEGED"/>
    <Class name="com.ibm.ws.concurrent.internal.ManagedThreadFactoryService$ManagedThreadFactoryImpl"/>
    <Method name="newThread"/>
  </Match>
  
     <!-- Using new Integer(0) ensures we lock on a nonboxed Integer which will be unique -->
   <Match>
     <Or>
       <Class name="com.ibm.ws.concurrent.internal.SubmittedTask" />
       <Class name="com.ibm.ws.concurrent.internal.SubmittedTask$FutureImpl" />
     </Or>
     <Bug pattern="DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE"/>
   </Match>

</FindBugsFilter>