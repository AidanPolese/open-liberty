<!--
    Copyright (c) 2017 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<FindBugsFilter>
  <!-- Begin Global Findbugs Excludes do not edit by hand - edit globally-->
  <Match>
    <Bug pattern="BC_IMPOSSIBLE_INSTANCEOF,BC_VACUOUS_INSTANCEOF,BSHIFT_WRONG_ADD_PRIORITY,CO_COMPARETO_INCORRECT_FLOATING,DE_MIGHT_IGNORE,DLS_DEAD_LOCAL_STORE,DM_BOXED_PRIMITIVE_FOR_PARSING,DM_BOXED_PRIMITIVE_TOSTRING,DM_NUMBER_CTOR,DMI_HARDCODED_ABSOLUTE_FILENAME,EQ_DOESNT_OVERRIDE_EQUALS,INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE,IT_NO_SUCH_ELEMENT,ME_ENUM_FIELD_SETTER,ME_MUTABLE_ENUM_FIELD,MS_CANNOT_BE_FINAL,MS_MUTABLE_ARRAY,MS_MUTABLE_COLLECTION,MS_MUTABLE_COLLECTION_PKGPROTECT,MS_PKGPROTECT,NP_LOAD_OF_KNOWN_NULL_VALUE,NP_NULL_ON_SOME_PATH,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,NP_NULL_PARAM_DEREF,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,RANGE_ARRAY_INDEX,RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,RpC_REPEATED_CONDITIONAL_TEST,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,SA_FIELD_SELF_ASSIGNMENT,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE,UC_USELESS_CONDITION,UC_USELESS_CONDITION_TYPE,UC_USELESS_OBJECT,UC_USELESS_VOID_METHOD,WMI_WRONG_MAP_ITERATOR"/>
  </Match>
  <!-- End Global Findbugs Excludes do not edit by hand - edit globally-->
  <!-- See http://findbugs.sourceforge.net/manual/filter.html for details of the syntax of this file -->
  
  <!-- The caller of the classloading service needs to assert privilege to create classloaders -->
  <Match>
    <Bug pattern="DJV_CONSTRUCT_INSIDE_DO_PRIVILEGED, DJV_DO_INSIDE_DO_PRIVILEGED, DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED"/>
  </Match>
  
  <!-- Avoid reporting that MultiMap.clone() does not call super.clone(); this is deliberate -->
  <Match>
    <Bug pattern="CN_IDIOM_NO_SUPER_CALL" />
    <Class name="com.ibm.ws.classloading.internal.util.MultiMap" />
  </Match>

  <!-- Ignore DEAD_LOCAL_STORE for caught exceptions that aren't used in the catch block -->
  <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.Util" />
    <Method name="tryToClose" />
    <Local name="ignored" />
  </Match>

  <!-- Ignore DEAD_LOCAL_STORE for caught exceptions that aren't used in the catch block -->
  <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader" />
    <Method name="stripTrailingSlash" />
  </Match>
  <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader$JarCacheDisabler" />
  </Match>
  <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader$ArtifactContainerUniversalContainer" />
    <Method name="getResource" />
  </Match>
    <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader$ContainerUniversalContainer" />
    <Method name="getResource" />
  </Match>
    <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader$EntryByteResourceInformation" />
    <Method name="getManifest" />
  </Match>
  
  <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.ClassLoaderUtils" />
  </Match>
  <Match>
    <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    <Class name="com.ibm.ws.classloading.internal.GatewayBundleFactory" />
    <Method name="createGatewayBundleClassLoader" />
  </Match>
  
  <!-- Both these two have an extra internal interface they register against to report resolution failures -->
  <Match>
    <Bug pattern="TR_WRONG_CLASS_NAME" />
    <Class name="com.ibm.ws.classloading.internal.APIResolverHook" />
  </Match>
  <Match>
    <Bug pattern="TR_WRONG_CLASS_NAME" />
    <Class name="com.ibm.ws.classloading.internal.APIResolverHookFactory" />
  </Match>

  <!-- Ignore warnings about code in .resources packages --> 
  <Match> 
    <Bug code="EI" />
    <Class name="~.*\.resources\..*" />
    <Method name="getContents"/>
  </Match>
  
  <!-- Allow calls to getResource, as agreed by Ozzy, DJV & JoeC -->
  <Match>
    <Bug pattern="DJV_LIBERTY_METHOD_TO_BE_AVOIDED"/>
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader" />
  </Match>    
    <Match>
    <Bug pattern="DJV_LIBERTY_METHOD_TO_BE_AVOIDED" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader$ArtifactEntryByteResourceInformation" />
  </Match>
    <Match>
    <Bug pattern="DJV_LIBERTY_METHOD_TO_BE_AVOIDED" />
    <Class name="com.ibm.ws.classloading.internal.ContainerClassLoader$ArtifactEntryUniversalResource" />
  </Match>

  <!-- Allow a naked notify() in postEvent, since it uses a volatile int to ensure changes are propagated to threads that observe an updated value and the caller uses read/write locking to prevent a value being read during an update. -->
  <Match>
    <Bug pattern="NN_NAKED_NOTIFY" />
    <Class name="com.ibm.ws.classloading.internal.util.EventLock" />
    <Method name="postEvent" />
  </Match>
  
</FindBugsFilter>
