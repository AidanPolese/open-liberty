<FindBugsFilter>
  <!-- Begin Global Findbugs Excludes do not edit by hand - edit globally-->
  <Match>
    <Bug pattern="BC_IMPOSSIBLE_INSTANCEOF,BC_VACUOUS_INSTANCEOF,BSHIFT_WRONG_ADD_PRIORITY,CO_COMPARETO_INCORRECT_FLOATING,DE_MIGHT_IGNORE,DLS_DEAD_LOCAL_STORE,DM_BOXED_PRIMITIVE_FOR_PARSING,DM_BOXED_PRIMITIVE_TOSTRING,DM_NUMBER_CTOR,DMI_HARDCODED_ABSOLUTE_FILENAME,EQ_DOESNT_OVERRIDE_EQUALS,INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE,IT_NO_SUCH_ELEMENT,ME_ENUM_FIELD_SETTER,ME_MUTABLE_ENUM_FIELD,MS_CANNOT_BE_FINAL,MS_MUTABLE_ARRAY,MS_MUTABLE_COLLECTION,MS_MUTABLE_COLLECTION_PKGPROTECT,MS_PKGPROTECT,NP_LOAD_OF_KNOWN_NULL_VALUE,NP_NULL_ON_SOME_PATH,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,NP_NULL_PARAM_DEREF,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,RANGE_ARRAY_INDEX,RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,RpC_REPEATED_CONDITIONAL_TEST,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,SA_FIELD_SELF_ASSIGNMENT,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE,UC_USELESS_CONDITION,UC_USELESS_CONDITION_TYPE,UC_USELESS_OBJECT,UC_USELESS_VOID_METHOD,WMI_WRONG_MAP_ITERATOR"/>
  </Match>
  <!-- End Global Findbugs Excludes do not edit by hand - edit globally-->
   <!-- See http://findbugs.sourceforge.net/manual/filter.html for details of the syntax of this file -->
   
   <!--  All classes in com.ibm.ws.ssl can be assumed to have privilege -->
   <Match>
     <Bug pattern="DJV_CONSTRUCT_INSIDE_DO_PRIVILEGED, DJV_DO_INSIDE_DO_PRIVILEGED"/>
   </Match>
    <!-- match generated nls classes: return mutable type -->
    <Match> 
      <Class name="~.*\.resources\..*" />
      <Method name="getContents"/>
      <Bug code="EI" />
    </Match>   
   <!-- Allow catch-all code (because the code needs to exit normally even if it receives unchecked exceptions)-->
   <Match>
     <Bug pattern="REC_CATCH_EXCEPTION" />
     <Class name="com.ibm.ws.ssl.JSSEProviderFactory" />
     <Method name="initializeFips" />
   </Match>
   <Match>
     <Bug pattern="REC_CATCH_EXCEPTION" />
     <Class name="com.ibm.ws.ssl.core.WSX509TrustManager" />
     <Method name="checkServerTrusted" />
   </Match>

   <!-- Ignore generated class -->
   <Match>
     <Class name="com.ibm.ws.ssl.resources.ssl" />
   </Match>

   <!-- Allow SSLConfigBundle to write to static field from instance setter method -->
   <Match>
     <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
     <Class name="com.ibm.websphere.ssl.osgi.SSLConfigBundle" />
     <Method name="setLocMgr" />
   </Match>
   
   <!-- Allow WSPKCSInKeyStore to set static field from instance method 
   <Match>
     <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
     <Class name="com.ibm.ws.ssl.core.WSPKCSInKeyStore" />
     <Method name="initializePKCS11ImplProvider" />
   </Match>
   -->
      
   <!--  Code known to be broken (according to its comments) -->
   <Match>
     <Bug pattern="SE_BAD_FIELD"/>
     <Class name="com.ibm.ws.ssl.config.WSKeyStore"/>
     <Field name="myKeyStore"/>
   </Match>
   <!-- Allow WSKeyStore to use equals() method inherited from Hashtable, accept minuscule risk that it will compare equal to a Hashtable or Properties object-->
   
   <Match>
     <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS" />
     <Class name="com.ibm.ws.ssl.config.WSKeyStore"/>
   </Match>
   
   <!-- Allow print methods on WSX509TrustManager to use System.out.println(). Messages *are* NLS'd, and System.out is only used as a fallback -->
   <Match>
     <Bug pattern="SYSTEM_OUT_USED" />
     <Class name="com.ibm.ws.ssl.core.WSX509TrustManager" />
     <Or>
       <Method name="printClientHandshakeError" />
       <Method name="printMessage" />
     </Or>
   </Match>
   
   <!-- Allow URLStreamHandler to invoke blocking method URL.hashCode(), since it only does this if all else fails -->
   <Match>
     <Bug pattern="DMI_BLOCKING_METHODS_ON_URL" />
     <Class name="com.ibm.ws.runtime.util.URLStreamHandlerAdapter" />
     <Method name="hashCode" />
   </Match>

   <!--  Allow JSSEHelper.getPropertiesOnThread and JSSEHelper.setPropertiesOnThread to make debug calls -->
   <Match>
     <Bug pattern="TR_INCORRECTLY_GUARDED"/>
     <Class name="com.ibm.websphere.ssl.JSSEHelper"/>
     <Or>
       <Method name="~(get|set)SSLPropertiesOnThread"/>
     </Or>
   </Match>
   <!--  Allow JSSEHelper to give the wrong method name to trace -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.websphere.ssl.JSSEHelper"/>
   </Match>
   
   <!--  Allow SSLConfig.setProperty to make guarded calls -->
   <Match>
     <Bug pattern="TR_INCORRECTLY_GUARDED"/>
     <Class name="com.ibm.websphere.ssl.SSLConfig"/>
     <Method name="setProperty"/>
   </Match>
   <!-- Allow SSLConfig to pass the wrong method name to trace -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.websphere.ssl.SSLConfig"/>
   </Match>
   <!-- Allow CertificateManager to pass the wrong method name to trace -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.ws.ssl.config.CertificateManager"/>
   </Match>
   <!--  Allow incorrect guard in StreamHandlerUtils.getResoourceClassLoader (it's building a string for debug) -->
   <Match>
     <Bug pattern="TR_INCORRECTLY_GUARDED"/>
     <Class name="com.ibm.ws.runtime.util.StreamHandlerUtils"/>
     <Method name="getResourceClassLoader"/>
   </Match>
  <Match>
    <Class name="com.ibm.ws.runtime.util.StreamHandlerUtils"/>
    <Method name="&lt;clinit&gt;" signature="()V"/>
    <Bug pattern="TR_BAD_RESOURCE_BUNDLE"/>
  </Match>
   <!-- Allow KeyStoreManager to pass the wrong method name to trace -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.ws.ssl.config.KeyStoreManager"/>
   </Match>
   <!--  False positive from the missing exit trace detector (due to the boolean expression) -->
   <Match>
     <Bug pattern="TR_MISSING_EXIT_TRACE"/>
     <Class name="com.ibm.ws.ssl.config.KeyStoreManager"/>
     <Method name="checkIfClientKeyStoreAndTrustStoreExists"/>
   </Match>
   <!--  Allow wrong method name for KeyStoreManager$GetKeyStoreOutputStreamAction.run -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.ws.ssl.config.KeyStoreManager$GetKeyStoreOutputStreamAction"/>
     <Method name="run"/>
   </Match>
   <!--  Allow SSLConfigManager.parse methods to call printTrustManagerProperties with a trace guards -->
   <Match>
     <Bug pattern="TR_INCORRECTLY_GUARDED"/>
     <Class name="com.ibm.ws.ssl.config.SSLConfigManager"/>
     <Method name="~parse.*"/>
   </Match>
   <!-- Allow SSLConfigManager.printTrustManagerProperties to call trace withouut a guard (the caller is guarded) -->
   <Match>
     <Bug pattern="TR_MISSING_GUARD"/>
     <Class name="com.ibm.ws.ssl.config.SSLConfigManager"/>
     <Method name="printTrustManagerProperties"/>
   </Match>
   <!--  Allow SSLConfigManager to pass the wrong method name -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.ws.ssl.config.SSLConfigManager"/>
   </Match>
   <!--  Allow WSKeyStore$1.run to make calls inside of trace guards (to gather debug info)-->
   <Match>
     <Bug pattern="TR_INCORRECTLY_GUARDED"/>
     <Class name="com.ibm.ws.ssl.config.WSKeyStore$1"/>
     <Method name="run"/>
   </Match>
   <!--  Allow WSX509KeyManager.choose(Client|Server)Alias to provide the wrong names (and false positives on missed exit trace -->
   <Match>
     <Bug pattern="TR_MISSING_EXIT_TRACE, TR_WRONG_METHOD_NAME, TR_TOO_MUCH_CODE_BEFORE_EXIT"/>
     <Class name="com.ibm.ws.ssl.core.WSX509KeyManager"/>
     <Method name="~choose(Client|Server)Alias"/>
   </Match>
   <!--  Allow JSSEProviderFactory.initializeIBMCMSProvider to pass the wrong method name -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.ws.ssl.JSSEProviderFactory"/>
     <Method name="initializeIBMCMSProvider"/>
   </Match>
   <!-- Allow AbstractJSSEProvider.getTrustManagerArray to compute its array on the return statement -->
   <Match>
     <Bug pattern="TR_TOO_MUCH_CODE_BEFORE_EXIT"/>
     <Class name="com.ibm.ws.ssl.provider.AbstractJSSEProvider"/>
     <Pattern name="getTrustManagerArray"/>
   </Match>
   <!-- AbtractJSSEProvider.get methods to pass the wrong method name -->
   <Match>
     <Bug pattern="TR_WRONG_METHOD_NAME"/>
     <Class name="com.ibm.ws.ssl.provider.AbstractJSSEProvider"/>
     <Method name="~get.*"/>
   </Match>
   
   <!-- pre-existing calls to System.currentTimeMillis -->
   <Match>
     <Class name="com.ibm.ws.ssl.config.WSKeyStore"/>
     <Method name="printWarning"/>
     <Bug pattern="SYSTEM_CURRENT_TIME_MILLIS_CALLED"/>
   </Match>
   <Match>
     <Class name="com.ibm.ws.ssl.config.WSKeyStore$1"/>
     <Method name="run"/>
     <Bug pattern="SYSTEM_CURRENT_TIME_MILLIS_CALLED"/>
   </Match>
   <Match>
     <Class name="com.ibm.ws.ssl.core.WSX509TrustManager"/>
     <Method name="checkIfExpiredBeforeOrAfter"/>
     <Bug pattern="SYSTEM_CURRENT_TIME_MILLIS_CALLED"/>
   </Match>
   
   <!-- Hmm, given SSLConfig extends Properties, having it NPE in this case is reasonable -->
   <Match>
     <Class name="com.ibm.websphere.ssl.SSLConfig"/>
     <Method name="setProperty"/>
     <Bug pattern="NP_NULL_PARAM_DEREF"/>
   </Match>
   
   <!-- Pre-existing (i.e., prior to findbugs 2.0.2) problems -->
   <Match>
     <Class name="com.ibm.websphere.ssl.SSLConfig$1"/>
     <Method name="run"/>
     <Bug pattern="DM_DEFAULT_ENCODING"/>
   </Match>
   <Match>
     <Class name="com.ibm.ws.ssl.core.CertMappingKeyManager"/>
     <Method name="parseSSLCertFile"/>
     <Bug pattern="DM_DEFAULT_ENCODING"/>
   </Match>
   <Match>
     <Class name="com.ibm.ws.ssl.core.WSPKCSInKeyStore"/>
     <Method name="convertFileToBuffer"/>
     <Bug pattern="DM_DEFAULT_ENCODING"/>
   </Match> 
   
   <!-- Hmm, reasonable enough to check in this case -->
   <Match>
     <Class name="com.ibm.ws.ssl.config.WSKeyStore$1"/>
     <Method name="run"/>
     <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
   </Match>
</FindBugsFilter>