/**
 * WARNING!  THIS FILE IS AUTOMATICALLY GENERATED!  DO NOT MODIFY IT!
 * Generated on Wed Mar 08 13:02:43 EST 2017
 */

package com.ibm.ws.kernel.feature.internal.resources;

public class FeatureToolOptions extends java.util.ListResourceBundle
{
   public Object[][] getContents() {
       return resources;
   }
   private final static Object[][] resources= {
      { "classpath.desc", "\tGenerate a JAR that can be added to a compiler classpath in order to\n\tuse APIs from a list of features." },
      { "classpath.option-desc.--features", "\tThe list of features to obtain the list of API JARs from." },
      { "classpath.option-desc.fileName", "\tThe name of the JAR file to write the classpaths to." },
      { "classpath.option-key.--features", "    --features=value,value,..." },
      { "classpath.option-key.fileName", "    fileName" },
      { "featureList.desc", "\tGenerate an XML report on all features installed in the runtime." },
      { "featureList.option-desc.--encoding", "\tSpecify the character set to use when writing the feature list xml   \n\tfile." },
      { "featureList.option-desc.--locale", "\tSpecify the language to use when writing the feature list. This      \n\tconsists of the ISO-639 two-letter lowercase language code,          \n\toptionally followed by an underscore and the ISO-3166 uppercase      \n\ttwo-letter country code." },
      { "featureList.option-desc.--productextension", "\tSpecify the product extension name whose features are to be listed.  \n\tIf the product extension is installed in the default user location,  \n\tuse the keyword: usr.                                                \n\tIf this option is not specified, the action is taken on Liberty core." },
      { "featureList.option-desc.fileName", "\tThe name of the file to write the feature list xml to." },
      { "featureList.option-key.--encoding", "    --encoding=charset" },
      { "featureList.option-key.--locale", "    --locale=language" },
      { "featureList.option-key.--productextension", "    --productExtension=name" },
      { "featureList.option-key.fileName", "    fileName" },
      { "find.desc", "\tFind applicable features from the IBM WebSphere Liberty Repository." },
      { "find.option-desc.--verbose", "\tUse this option to display any available additional information while\n\tthe action runs." },
      { "find.option-desc.--viewInfo", "\tView detailed information." },
      { "find.option-desc.searchString", "\tUse the search string to find applicable features in the IBM         \n\tWebSphere Liberty Repository." },
      { "find.option-key.--verbose", "    --verbose" },
      { "find.option-key.--viewInfo", "    --viewInfo" },
      { "find.option-key.searchString", "    searchString" },
      { "global.actions", "Actions:" },
      { "global.description", "Description:" },
      { "global.options", "Options:" },
      { "global.options.lower", "options" },
      { "global.options.statement", "\tUse help [actionName] for detailed option information of each action." },
      { "global.usage", "Usage:" },
      { "help.desc", "\tPrint help information for the specified action." },
      { "install.desc", "\tInstall a feature packaged as a Subsystem Archive (esa) to the runtime." },
      { "install.option-desc.--downloadOnly", "\tDownload a feature to a local directory without installing it. You   \n\tcan configure this option to download all dependent features, only   \n\tthe required dependent features, or none of the dependent features.  \n\tThe default setting is to download all of the required dependent     \n\tfeatures. The directory is specified with the --location option." },
      { "install.option-desc.--location", "\tIf you are installing a feature from a local directory, use this     \n\toption to specify the location of the local directory. If you are    \n\tdownloading a feature using the --downloadOnly option, use this      \n\toption to specify the destination directory for the downloaded       \n\tfeature. This option is required when using --downloadOnly and       \n\t--offlineOnly." },
      { "install.option-desc.--offlineOnly", "\tSpecify this option if you do not want to connect to the IBM         \n\tWebSphere Liberty Repository and are installing features from the    \n\tlocal directory only. The local directory is specified with the      \n\t--location option." },
      { "install.option-desc.--password", "\tSpecify the password for the user id specified in --user option." },
      { "install.option-desc.--passwordFile", "\tProvide a file contains the password for the user id specified in    \n\t--user option." },
      { "install.option-desc.--to", "\tSpecify where to install the feature. The feature can be installed to\n\tany configured product extension location, or as a user feature. If  \n\tthis option is not specified the feature will be installed as a user \n\tfeature." },
      { "install.option-desc.--user", "\tSpecify the valid user id to the WebSphere Liberty Repository." },
      { "install.option-desc.--verbose", "\tUse this option to display any available additional information while\n\tthe action runs." },
      { "install.option-desc.--when-file-exists", "\tIf a file that is part of the ESA already exists on the system, you  \n\tmust specify what actions to take. Valid options are: fail - abort   \n\tthe installation; ignore - continue the installation and ignore the  \n\tfile that exists; replace - overwrite the existing file. Do not use  \n\tthe replace option to reinstall features." },
      { "install.option-desc.name", "\tSpecify the location of the Subsystem archive to be used.  This can  \n\tbe an esa file, an IBM-Shortname or the Subsystem-SymbolicName of the\n\tSubsystem archive.  The value can be a file name or a URL to         \n\tthe esa file. If an IBM-Shortname or Subsystem-SymbolicName is       \n\tspecified, the esa file will be installed from an online repository  \n\thosted by IBM." },
      { "install.option-key.--downloadOnly", "    --downloadOnly=[all|required*|none]" },
      { "install.option-key.--location", "    --location=directoryPath" },
      { "install.option-key.--offlineOnly", "    --offlineOnly" },
      { "install.option-key.--password", "    --password" },
      { "install.option-key.--passwordFile", "    --passwordFile" },
      { "install.option-key.--to", "    --to=[usr|extension]" },
      { "install.option-key.--user", "    --user" },
      { "install.option-key.--verbose", "    --verbose" },
      { "install.option-key.--when-file-exists", "    --when-file-exists=[fail|ignore|replace]" },
      { "install.option-key.name", "    name" },
      { "task.unknown", "Unknown action: {0}" },
      { "uninstall.desc", "\tUninstall a feature from the runtime." },
      { "uninstall.option-desc.--force", "\tUninstall the feature regardless of whether other installed features have\n\tdependencies on it.  Uninstalling a feature that is required by other\n\tinstalled features might cause those features to stop working and might\n\tprevent servers from running correctly." },
      { "uninstall.option-desc.--noPrompts", "\tSuppress confirmation messages to remove features and uninstalls     \n\tfeatures without any user interactions." },
      { "uninstall.option-desc.--verbose", "\tUse this option to display any available additional information while\n\tthe action runs." },
      { "uninstall.option-desc.name", "\tSpecify the feature to uninstall.                                    \n\tThis can be an IBM-Shortname or the Subsystem-SymbolicName of the    \n\tSubsystem archive." },
      { "uninstall.option-key.--force", "    --force" },
      { "uninstall.option-key.--noPrompts", "    --noPrompts" },
      { "uninstall.option-key.--verbose", "    --verbose" },
      { "uninstall.option-key.name", "    name" },
      { "usage", "Usage: {0}" }
   };
}
